// https://eslint.org/docs/rules/#possible-problems
const ESLINT_POSSIBLE_ERRORS_RULES = {
	'array-callback-return': ['error', { allowImplicit: true }],
	'constructor-super': 'error',
	'for-direction': 'error',
	'getter-return': 'error',
	'no-async-promise-executor': 'error',
	'no-await-in-loop': 'error',
	'no-class-assign': 'error',
	'no-compare-neg-zero': 'error',
	'no-cond-assign': 'error',
	'no-const-assign': 'error',
	'no-constant-binary-expression': 'error',
	'no-constant-condition': 'error',
	'no-constructor-return': 'error',
	'no-control-regex': 'error',
	'no-debugger': 'error',
	'no-dupe-args': 'error',
	'no-dupe-class-members': 'error',
	'no-dupe-else-if': 'error',
	'no-dupe-keys': 'error',
	'no-duplicate-case': 'error',
	'no-duplicate-imports': 'off',
	'no-empty-character-class': 'error',
	'no-empty-static-block': 'error',
	'no-empty-pattern': 'error',
	'no-ex-assign': 'error',
	'no-fallthrough': 'error',
	'no-func-assign': 'error',
	'no-import-assign': 'error',
	'no-inner-declarations': 'error',
	'no-invalid-regexp': 'error',
	'no-irregular-whitespace': 'error',
	'no-loss-of-precision': 'error',
	'no-misleading-character-class': 'error',
	'no-new-native-nonconstructor': 'error',
	'no-obj-calls': 'error',
	'no-promise-executor-return': 'error',
	'no-prototype-builtins': 'error',
	'no-self-assign': ['error', { props: true }],
	'no-self-compare': 'error',
	'no-setter-return': 'error',
	'no-sparse-arrays': 'error',
	'no-template-curly-in-string': 'error',
	'no-this-before-super': 'error',
	'no-undef': ['error', { typeof: true }],
	'no-unexpected-multiline': 'error',
	'no-unmodified-loop-condition': 'error',
	'no-unreachable': 'error',
	'no-unreachable-loop': 'error',
	'no-unsafe-finally': 'error',
	'no-unsafe-negation': 'error',
	'no-unsafe-optional-chaining': 'error',
	'no-unused-private-class-members': 'error',
	'no-unused-vars': [
		'error',
		{
			vars: 'all',
			args: 'after-used',
			ignoreRestSiblings: true,
			argsIgnorePattern: /^_/.source,
			caughtErrors: 'all',
			caughtErrorsIgnorePattern: /^_$/.source,
		},
	],
	'no-use-before-define': 'off',
	'no-useless-assignment': 'error',
	'no-useless-backreference': 'error',
	'require-atomic-updates': 'error',
	'use-isnan': 'error',
	'valid-typeof': ['error', { requireStringLiterals: false }],
};

// https://eslint.org/docs/rules/#suggestions
const ESLINT_SUGGESTIONS_RULES = {
	'accessor-pairs': ['error', { enforceForClassMembers: true }],
	'arrow-body-style': 'off',
	'block-scoped-var': 'error',
	camelcase: ['error', { properties: 'always' }],
	'capitalized-comments': [
		'error',
		'always',
		{
			ignorePattern: /prettier-ignore/.source,
			ignoreInlineComments: true,
			ignoreConsecutiveComments: true,
		},
	],
	'class-methods-use-this': 'off',
	complexity: 'warn',
	'consistent-return': 'off',
	'consistent-this': 'off',
	curly: 'error',
	'default-case': 'error',
	'default-case-last': 'error',
	'default-param-last': 'error',
	'dot-notation': 'error',
	eqeqeq: 'error',
	'func-name-matching': ['error', { considerPropertyDescriptor: true }],
	'func-names': ['error', 'never'],
	'func-style': 'off',
	'grouped-accessor-pairs': ['error', 'getBeforeSet'],
	'guard-for-in': 'error',
	'id-denylist': 'off',
	'id-length': 'off',
	'id-match': 'off',
	'init-declarations': 'off',
	'logical-assignment-operators': 'off',
	'max-classes-per-file': 'off',
	'max-depth': 'warn',
	'max-lines': 'off',
	'max-lines-per-function': 'off',
	'max-nested-callbacks': ['warn', 5],
	'max-params': ['warn', { max: 5 }],
	'max-statements': 'off',
	'new-cap': [
		'error',
		{
			newIsCap: true,
			capIsNew: true,
		},
	],
	'no-alert': 'error',
	'no-array-constructor': 'error',
	'no-bitwise': 'error',
	'no-caller': 'error',
	'no-case-declarations': 'error',
	'no-console': 'off',
	'no-continue': 'off',
	'no-delete-var': 'error',
	'no-div-regex': 'off',
	'no-else-return': ['error', { allowElseIf: false }],
	'no-empty': ['error', { allowEmptyCatch: true }],
	'no-empty-function': 'off',
	'no-eq-null': 'error',
	'no-eval': 'error',
	'no-extend-native': 'error',
	'no-extra-bind': 'error',
	'no-extra-boolean-cast': 'error',
	'no-extra-label': 'error',
	'no-global-assign': 'error',
	'no-implicit-coercion': 'error',
	'no-implicit-globals': 'error',
	'no-implied-eval': 'error',
	'no-inline-comments': 'off',
	'no-invalid-this': 'off',
	'no-iterator': 'error',
	'no-label-var': 'error',
	'no-labels': 'error',
	'no-lone-blocks': 'error',
	'no-lonely-if': 'error',
	'no-loop-func': 'error',
	'no-magic-numbers': 'off',
	'no-multi-assign': 'error',
	'no-multi-str': 'error',
	'no-negated-condition': 'error',
	'no-nested-ternary': 'error',
	'no-new': 'error',
	'no-new-func': 'error',
	'no-new-native-nonconstructor': 'error',
	'no-object-constructor': 'error',
	'no-new-wrappers': 'error',
	'no-nonoctal-decimal-escape': 'error',
	'no-octal': 'error',
	'no-octal-escape': 'error',
	'no-param-reassign': 'error',
	'no-plusplus': 'off',
	'no-proto': 'error',
	'no-redeclare': 'error',
	'no-regex-spaces': 'error',
	'no-restricted-exports': 'off',
	'no-restricted-globals': ['error', 'event'],
	'no-restricted-imports': [
		'error',
		'domain',
		'freelist',
		'smalloc',
		'sys',
		'colors',
	],
	'no-restricted-properties': 'off',
	'no-restricted-syntax': ['error', 'WithStatement'],
	'no-return-assign': ['error', 'always'],
	'no-script-url': 'error',
	'no-sequences': 'error',
	'no-shadow': 'off',
	'no-shadow-restricted-names': 'error',
	'no-ternary': 'off',
	'no-throw-literal': 'error',
	'no-undef-init': 'error',
	'no-undefined': 'off',
	'no-underscore-dangle': 'off',
	'no-unneeded-ternary': 'error',
	'no-unused-expressions': 'error',
	'no-unused-labels': 'error',
	'no-useless-call': 'error',
	'no-useless-catch': 'error',
	'no-useless-computed-key': ['error', { enforceForClassMembers: true }],
	'no-useless-concat': 'error',
	'no-useless-constructor': 'error',
	'no-useless-escape': 'error',
	'no-useless-rename': 'error',
	'no-useless-return': 'error',
	'no-var': 'error',
	'no-void': 'error',
	'no-warning-comments': 'warn',
	'no-with': 'error',
	'object-shorthand': ['error', 'always'],
	'one-var': ['error', 'never'],
	'operator-assignment': ['error', 'always'],
	'prefer-arrow-callback': ['error', { allowNamedFunctions: true }],
	'prefer-const': ['error', { destructuring: 'all' }],
	'prefer-destructuring': 'off',
	'prefer-exponentiation-operator': 'error',
	'prefer-named-capture-group': 'error',
	'prefer-numeric-literals': 'error',
	'prefer-object-has-own': 'error',
	'prefer-object-spread': 'error',
	'prefer-promise-reject-errors': ['error', { allowEmptyReject: true }],
	'prefer-regex-literals': 'error',
	'prefer-rest-params': 'error',
	'prefer-spread': 'error',
	'prefer-template': 'error',
	radix: 'error',
	'require-await': 'off',
	'require-unicode-regexp': 'off',
	'require-yield': 'error',
	'sort-imports': 'off',
	'sort-keys': 'off',
	'sort-vars': 'off',
	strict: 'off',
	'symbol-description': 'error',
	'vars-on-top': 'off',
	yoda: 'error',
};

// https://eslint.org/docs/rules/#layout-formatting
const ESLINT_LAYOUT_AND_FORMATTING_RULES = {
	'unicode-bom': ['error', 'never'],
};

const ESLINT_PLUGIN_RULES = {
	...ESLINT_POSSIBLE_ERRORS_RULES,
	...ESLINT_SUGGESTIONS_RULES,
	...ESLINT_LAYOUT_AND_FORMATTING_RULES,
};

export default ESLINT_PLUGIN_RULES;
